(()=>{"use strict";const e=async()=>{(await chrome.runtime.getContexts({})).find((e=>"OFFSCREEN_DOCUMENT"===e.contextType))||await chrome.offscreen.createDocument({url:"offscreen.html",reasons:["USER_MEDIA"],justification:"Recording from chrome.tabCapture API and accessing the HTML Canvas"})},t=e=>{Object.defineProperty(window.navigator,"userAgent",{value:e,configurable:!0}),Object.defineProperty(window.navigator,"appVersion",{value:e,configurable:!0}),Object.defineProperty(window.navigator,"userAgentData",{value:void 0,configurable:!0})},n=()=>{const e=e=>{["oncontextmenu","onselectstart","ondragstart","onmousedown","oncut","oncopy","onpaste"].forEach((t=>e[t]=null))};class t{constructor(){this.events=["DOMAttrModified","DOMNodeInserted","DOMNodeRemoved","DOMCharacterDataModified","DOMSubtreeModified"],this.bindEvents()}bindEvents(){this.events.forEach((e=>document.addEventListener(e,this,!0)))}handleEvent(){this.isCalled=!0}unbindEvents(){this.events.forEach((e=>document.removeEventListener(e,this,!0)))}}class n{constructor(e){this.originalEvent=e,this.contextmenuEvent=this.createEvent(e.type)}createEvent(e){const{target:t,bubbles:n,cancelable:a,view:r,detail:o,screenX:s,screenY:c,clientX:i,clientY:d,ctrlKey:l,altKey:m,shiftKey:u,metaKey:g,button:p,relatedTarget:h}=this.originalEvent;return new MouseEvent(e,{target:t,bubbles:n,cancelable:a,view:r,detail:o,screenX:s,screenY:c,clientX:i,clientY:d,ctrlKey:l,altKey:m,shiftKey:u,metaKey:g,button:p,relatedTarget:h})}fire(){this.originalEvent.target.dispatchEvent(this.contextmenuEvent),this.isCanceled=this.contextmenuEvent.defaultPrevented}}(()=>{const e=document.createElement("style");e.type="text/css",e.innerText="\n        * {\n            -webkit-user-select: text !important;\n            -moz-user-select: text !important;\n            -ms-user-select: text !important;\n            user-select: text !important;\n        }",document.head.appendChild(e)})(),document.querySelectorAll("*").forEach((e=>{"none"===e.style.userSelect&&(e.style.userSelect="auto")})),e(document),e(document.body),setTimeout((()=>e(document)),2e3),["copy","cut","paste","select","selectstart"].forEach((e=>{document.addEventListener(e,(e=>e.stopPropagation()),!0)})),window.addEventListener("contextmenu",(function e(a){a.stopPropagation(),a.stopImmediatePropagation();const r=new n(a);window.removeEventListener(a.type,e,!0);const o=new t;r.fire(),window.addEventListener(a.type,e,!0),r.isCanceled&&o.isCalled&&a.preventDefault()}),!0)},a=()=>{const e=document.createElement("style");e.type="text/css",e.innerText="\n    * {\n        -webkit-user-select: text !important;\n        -moz-user-select: text !important;\n        -ms-user-select: text !important;\n        user-select: text !important;\n    }",document.head.appendChild(e);["contextmenu","copy","cut","paste","mouseup","mousedown","keyup","keydown","drag","dragstart","select","selectstart"].forEach((e=>{document.addEventListener(e,(e=>e.stopPropagation()),!0)}))},r=async e=>{try{const t=await fetch(e),n=await t.blob();return new Promise(((e,t)=>{const a=new FileReader;a.onload=function(t){const n=t.target.result;e(n)},a.onerror=function(e){t(e.message||e)},a.readAsDataURL(n)}))}catch(e){return e.message||e}},o=e=>{let t=new URL(e).pathname.split("/").pop();return t=decodeURIComponent(t),t=t.replace(/[^\w\-.,@ ]+/g,""),t},s=(e,t,n)=>{chrome.scripting.executeScript({target:{tabId:e,allFrames:!0},world:"MAIN",injectImmediately:!0,func:t,args:n})};chrome.runtime.onMessage.addListener((async t=>{var n,a;"background"===t.target&&("setTabVolume"===t.name?await(async(t,n)=>{if(await e(),(await chrome.tabCapture.getCapturedTabs()).some((e=>e.tabId===t)))chrome.runtime.sendMessage({name:"setVolume",target:"offscreen",tabId:t,value:n});else{const e=await chrome.tabCapture.getMediaStreamId({targetTabId:t});await chrome.runtime.sendMessage({name:"startRecording",target:"offscreen",streamId:e,tabId:t,value:n})}})(t.tabId,t.value):"updateVolume"===t.name?chrome.storage.local.set({[String(t.tabId)]:t.value}):"disposeTab"===t.name?chrome.storage.local.remove(String(t.tabId)):"downloadImage"===t.name&&(n=t.dataUrl,a=t.filename,chrome.downloads.download({url:n,filename:a,saveAs:!0})))})),chrome.tabs.onRemoved.addListener((e=>{chrome.runtime.sendMessage({name:"disposeTab",target:"offscreen",tabId:e})})),chrome.runtime.onInstalled.addListener((()=>{chrome.storage.local.get(["saveImageAsType"],(e=>{e.saveImageAsType&&(chrome.contextMenus.create({id:"parent",title:"Save as type",contexts:["image"]}),chrome.contextMenus.create({id:"jpg",title:"JPG",parentId:"parent",contexts:["image"]}),chrome.contextMenus.create({id:"png",title:"PNG",parentId:"parent",contexts:["image"]}),chrome.contextMenus.create({id:"webp",title:"WebP",parentId:"parent",contexts:["image"]}))}))})),chrome.contextMenus.onClicked.addListener((async t=>{const n=await r(t.srcUrl),a=o(t.srcUrl);await e(),await chrome.runtime.sendMessage({name:"convertType",target:"offscreen",dataUrl:n,filename:a,imageFormat:t.menuItemId})}));const c=e=>{chrome.storage.local.get(["userAgentValue","enableRightClick","enableAggressiveMode"],(r=>{r.userAgentValue&&s(e.tabId,t,[r.userAgentValue]),r.enableRightClick&&(s(e.tabId,n),r.enableAggressiveMode&&s(e.tabId,a))}))};chrome.webNavigation.onCommitted.addListener(c),chrome.webNavigation.onHistoryStateUpdated.addListener(c)})();